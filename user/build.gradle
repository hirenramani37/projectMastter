plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-parcelize'
    id 'kotlin-kapt'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
}

android {
    compileSdkVersion 31
    buildToolsVersion "31.0.0"

    defaultConfig {
        applicationId "com.massttr.user"
        minSdkVersion 23
        targetSdkVersion 31
        versionCode 1
        versionName "1.0"
        archivesBaseName = "Massttr User V" + versionCode + " " + getDate()

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
       buildConfigField 'String', 'BaseUrl', '\"https://massttr.com/api/v1/\"'
        buildConfigField 'String', 'BaseUrlStorage', '\"https://massttr.com/storage/\"'
     //   buildConfigField 'String', 'BaseUrl', '\"https://massttr.elaunchinfotech.com/api/v1/\"'
     //   buildConfigField 'String', 'BaseUrlStorage', '\"https://massttr.elaunchinfotech.com/storage/\"'
        buildConfigField 'String', 'BaseUrl2', '\"\"'
        buildConfigField 'String', 'UtcFormat', '\"yyyy-MM-dd HH:mm:ss\"'
        buildConfigField 'String', 'DateFormat', '\"\"'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    buildFeatures {
        dataBinding = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.0'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.2'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'com.google.android.libraries.places:places:2.5.0'
    implementation project(path: ':sneaker')
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    //material
    implementation 'com.google.android.material:material:1.6.0-alpha01'

    //RangSlider
    implementation 'com.github.nanjingboy:range-slider:1.0'

    //PING Place Picker
    implementation 'com.github.rtchagas:pingplacepicker:2.2.0'

    //Get lat and long
    implementation 'com.github.delight-im:Android-SimpleLocation:v1.1.0'
    implementation('io.nlopez.smartlocation:library:3.3.2') {
        transitive = false
    }

    //AndroidX - Views
    implementation "androidx.recyclerview:recyclerview:1.2.1"

    //Networking
    implementation 'com.squareup.okhttp3:okhttp:4.9.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.9.0'
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-scalars:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'

    //Timber App Logging
    implementation 'com.jakewharton.timber:timber:5.0.1'

    //Architecture
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'

    //JetPack Security
    implementation "androidx.security:security-crypto:1.1.0-alpha03"

    //Anko
    implementation 'org.jetbrains.anko:anko-common:0.10.8'
    implementation 'org.jetbrains.anko:anko-sqlite:0.10.8'

    //Coroutine
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.5.2'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.5.2'
    //testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-debug:1.5.0'
    //implementation  'org.jetbrains.kotlinx:kotlinx-coroutines-reactor:1.5.0'

    //Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:2.3.5"
    implementation "androidx.navigation:navigation-ui-ktx:2.3.5"

    //RuntimePermissions
    implementation "org.permissionsdispatcher:permissionsdispatcher:4.8.0"
    kapt "org.permissionsdispatcher:permissionsdispatcher-processor:4.8.0"

    //Coil - Coroutine ImageLoader
    implementation("io.coil-kt:coil:1.1.0")
    implementation("io.coil-kt:coil-video:1.1.0")

//    Firebase
    implementation platform('com.google.firebase:firebase-bom:26.2.0')
    implementation 'com.google.firebase:firebase-crashlytics-ktx'
    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation 'com.google.firebase:firebase-messaging-ktx'

    //Dimensions
    implementation 'com.intuit.sdp:sdp-android:1.0.6'
    implementation 'com.intuit.ssp:ssp-android:1.0.6'

    //AVI LOADER
    implementation 'com.wang.avi:library:2.1.3'

    //Rounded Corner ImageView
    implementation 'com.makeramen:roundedimageview:2.3.0'

    //Preference
    implementation 'androidx.preference:preference-ktx:1.1.1'

    // Round Circle
    implementation 'de.hdodenhof:circleimageview:3.1.0'

    //
    implementation 'com.github.hearsilent:DiscreteSlider:1.2.1'

    //OtpView
    implementation 'io.github.chaosleung:pinview:1.4.4'

    //SSP
    implementation 'com.intuit.ssp:ssp-android:1.0.6'

    implementation 'com.hbb20:ccp:2.5.0'

    implementation 'com.github.dhaval2404:imagepicker-support:1.7.1'

    implementation project(':massttr_utility')

    //Lottie
    implementation 'com.airbnb.android:lottie:3.5.0'

    //socket
    implementation('io.socket:socket.io-client:2.0.1') {
        // excluding org.json which is provided by Android
        exclude group: 'org.json', module: 'json'
    }

    implementation 'com.kbeanie:multipicker:1.6.2'

    //Glide
    implementation 'com.github.bumptech.glide:glide:4.12.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.12.0'

    // Google service
    implementation('com.google.android.gms:play-services-auth:20.0.0') {
        exclude group: 'com.google.android.gms', module: 'play-services-ads'
    }

    // Google Map
    implementation('com.google.android.gms:play-services-maps:18.0.1') {
        exclude group: 'com.google.android.gms', module: 'play-services-ads'
    }
    implementation('com.google.android.gms:play-services-location:19.0.0') {
        exclude group: 'com.google.android.gms', module: 'play-services-ads'
    }

    implementation 'com.github.rtchagas:pingplacepicker:2.2.0'

    //Get lat and long
    implementation 'com.github.delight-im:Android-SimpleLocation:v1.1.0'
    implementation('io.nlopez.smartlocation:library:3.3.2') {
        transitive = false
    }

    //Time
    implementation 'com.github.michaldrabik:classicmaterialtimepicker:1.1.3'

    //ShortcutBadger
    implementation "me.leolin:ShortcutBadger:1.1.22@aar"
    implementation 'com.github.whytot:BadgeForAppIcon:v1.0.0-beta.2'

    //busEvent
    implementation 'org.greenrobot:eventbus:3.2.0'

    implementation 'com.github.HamidrezaAmz:MagicalExoPlayer:2.0.3'

     //Exoplayer
    implementation 'com.google.android.exoplayer:exoplayer:2.16.1'

    implementation project(path: ':sneaker')
}

static def getDate() {
    return new Date().format('yyyy_MM_dd HH_mm') + " IST"
}
